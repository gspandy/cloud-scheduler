{"version":3,"sources":["webpack:///./src/views/Task.vue?25a0","webpack:///src/views/Task.vue","webpack:///./src/views/Task.vue?b153","webpack:///./src/views/Task.vue","webpack:///./src/views/Task.vue?4d7c"],"names":["render","_vm","this","_h","$createElement","_c","_self","attrs","slot","type","_v","trigger","on","on-click","operate","size","name","staticClass","staticStyle","margin-left","click","add","width","float","placeholder","on-change","changeGroup","model","value","callback","$$v","group","expression","_l","key","_s","margin-top","ref","border","columns","data","staticRenderFns","Taskvue_type_script_lang_text_2Fecmascript_6_","[object Object]","align","title","h","params","row","jobType","triggerType","period","count","cron","getState","triggerState","props","style","marginRight","show","jobName","verticalAlign","groups","methods","$router","push","state","item","$Modal","confirm","content","onOk","$axios","post","jobList","$refs","selection","getSelection","then","refresh","$Message","info","get","res","success","warn","job","loadGroups","views_Taskvue_type_script_lang_text_2Fecmascript_6_","component","Object","componentNormalizer","options","__file","__webpack_exports__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_lib_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_Task_vue_vue_type_style_index_0_id_297bb912_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0___default"],"mappings":"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","file":"js/chunk-742d.3d518aed.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('Card',[_c('p',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_c('Icon',{attrs:{\"type\":\"ios-list-box-outline\"}}),_vm._v(\"\\n        任务列表\\n    \")],1),_c('div',[_c('div',[_c('Dropdown',{attrs:{\"trigger\":\"click\"},on:{\"on-click\":_vm.operate}},[_c('Button',{attrs:{\"type\":\"default\",\"size\":\"large\"}},[_vm._v(\"\\n                    批量操作\\n                    \"),_c('Icon',{attrs:{\"type\":\"ios-arrow-down\"}})],1),_c('DropdownMenu',{attrs:{\"slot\":\"list\"},slot:\"list\"},[_c('DropdownItem',{attrs:{\"name\":\"activate\"}},[_c('Icon',{attrs:{\"type\":\"md-play\"}}),_vm._v(\"\\n                        激活\\n                    \")],1),_c('DropdownItem',{attrs:{\"name\":\"pause\"}},[_c('Icon',{attrs:{\"type\":\"md-pause\"}}),_vm._v(\"\\n                        暂停\\n                    \")],1),_c('div',{staticClass:\"line\"}),_c('DropdownItem',{attrs:{\"name\":\"delete\"}},[_c('Icon',{attrs:{\"type\":\"md-trash\"}}),_vm._v(\"\\n                        删除\\n                    \")],1)],1)],1),_c('Button',{staticStyle:{\"margin-left\":\"20px\"},attrs:{\"type\":\"primary\",\"size\":\"large\"},on:{\"click\":_vm.add}},[_vm._v(\"\\n                新建任务\\n                \"),_c('Icon',{attrs:{\"type\":\"md-add\"}})],1),_c('Select',{staticStyle:{\"width\":\"120px\",\"float\":\"right\"},attrs:{\"placeholder\":\"请选择分组\"},on:{\"on-change\":_vm.changeGroup},model:{value:(_vm.group),callback:function ($$v) {_vm.group=$$v},expression:\"group\"}},[_c('Option',{attrs:{\"value\":\"\"}},[_vm._v(\"全部\")]),_vm._l((_vm.groups),function(group){return _c('Option',{key:group,attrs:{\"value\":group}},[_vm._v(_vm._s(group))])})],2)],1),_c('div',{staticStyle:{\"margin-top\":\"20px\"}},[_c('Table',{ref:\"selection\",attrs:{\"border\":\"\",\"columns\":_vm.columns,\"data\":_vm.data}})],1)])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <Card>\n        <p slot=\"title\">\n            <Icon type=\"ios-list-box-outline\"/>\n            任务列表\n        </p>\n        <div>\n            <div>\n                <Dropdown @on-click=\"operate\" trigger=\"click\">\n                    <Button type=\"default\" size=\"large\">\n                        批量操作\n                        <Icon type=\"ios-arrow-down\"></Icon>\n                    </Button>\n                    <DropdownMenu slot=\"list\">\n                        <DropdownItem name=\"activate\">\n                            <Icon type=\"md-play\"/>\n                            激活\n                        </DropdownItem>\n                        <DropdownItem name=\"pause\">\n                            <Icon type=\"md-pause\"/>\n                            暂停\n                        </DropdownItem>\n                        <div class=\"line\"></div>\n                        <DropdownItem name=\"delete\">\n                            <Icon type=\"md-trash\"/>\n                            删除\n                        </DropdownItem>\n                    </DropdownMenu>\n                </Dropdown>\n                <Button @click=\"add\" type=\"primary\" size=\"large\" style=\"margin-left: 20px;\">\n                    新建任务\n                    <Icon type=\"md-add\"/>\n                </Button>\n                <Select @on-change=\"changeGroup\" v-model=\"group\" style=\"width:120px;float:right\" placeholder=\"请选择分组\">\n                    <Option value=\"\">全部</Option>\n                    <Option v-for=\"group in groups\" :value=\"group\" :key=\"group\">{{ group }}</Option>\n                </Select>\n            </div>\n            <div style=\"margin-top: 20px;\">\n                <Table border ref=\"selection\" :columns=\"columns\" :data=\"data\"></Table>\n            </div>\n        </div>\n    </Card>\n</template>\n\n<script lang=\"text/ecmascript-6\">\n    export default {\n        name: \"Task\",\n        data() {\n            return {\n                columns: [\n                    {\n                        type: 'selection',\n                        width: 60,\n                        align: 'center'\n                    },\n                    {\n                        title: '组名称',\n                        key: 'group'\n                    },\n                    {\n                        title: '任务名称',\n                        key: 'jobName'\n                    },\n                    {\n                        title: '任务类型',\n                        width: 100,\n                        key: 'jobType',\n                        render: (h, params) => {\n                            return h('div', [\n                                h('strong', params.row.jobType === 0 ? '脚本调用' : '远程请求')\n                            ]);\n                        }\n                    },\n                    {\n                        title: '触发类型',\n                        width: 100,\n                        key: 'triggerType',\n                        render: (h, params) => {\n                            return h('div', [\n                                h('strong', params.row.triggerType === 0 ? '简单触发' : 'cron触发')\n                            ]);\n                        }\n                    },\n                    {\n                        title: '执行规则',\n                        key: 'cron',\n                        render: (h, params) => {\n                            return h('div', [\n                                h('strong', params.row.triggerType === 0 ? '执行周期:' + params.row.period + ',执行次数:' + params.row.count : params.row.cron)\n                            ]);\n                        }\n                    },\n                    {\n                        title: '执行状态',\n                        key: 'triggerState',\n                        render: (h, params) => {\n                            return h('div', [\n                                h('strong', this.getState(params.row.triggerState))\n                            ]);\n                        }\n                    },\n                    {\n                        title: '操作',\n                        key: 'action',\n                        width: 120,\n                        align: 'center',\n                        render: (h, params) => {\n                            return h('div', [\n                                h('Button', {\n                                    props: {\n                                        type: 'info'\n                                    },\n                                    style: {\n                                        marginRight: '5px'\n                                    },\n                                    on: {\n                                        click: () => {\n                                            this.show(params.row.group + '_' + params.row.jobName)\n                                        }\n                                    }\n                                }, ['查看', h('Icon', {\n                                    props: {\n                                        type: 'ios-paper-plane',\n                                        size: 18\n                                    },\n                                    style: {\n                                        verticalAlign: '-3px'\n                                    }\n                                })])\n                            ]);\n                        }\n                    }\n                ],\n                data: [],\n                groups: [],\n                group: ''\n            }\n        },\n        methods: {\n            add() {\n                this.$router.push(\"/taskAdd\")\n            },\n            getState(state) {\n                if (state === 0) {\n                    return \"正常\";\n                } else if (state === 1) {\n                    return \"暂停\";\n                } else if (state === 2) {\n                    return \"完成\";\n                } else if (state === 3) {\n                    return \"错误\";\n                } else if (state === 4) {\n                    return \"阻塞\";\n                } else {\n                    return \"已终结\";\n                }\n            },\n            operate(item) {\n                switch (item) {\n                    case \"pause\":\n                        this.$Modal.confirm({\n                            title: '确认框',\n                            content: '<p>是否暂停任务</p>',\n                            onOk: () => {\n                                this.$axios.post(\"/pause\", {'jobList': this.$refs.selection.getSelection()}).then(() => {\n                                    this.refresh();\n                                    this.$Message.info('暂停任务成功');\n                                });\n                            }\n                        });\n                        break;\n                    case \"activate\":\n                        this.$Modal.confirm({\n                            title: '确认框',\n                            content: '<p>是否激活任务</p>',\n                            onOk: () => {\n                                this.$axios.post(\"/activate\", {'jobList': this.$refs.selection.getSelection()}).then(() => {\n                                    this.refresh()\n                                    this.$Message.info('激活任务成功');\n                                });\n                            }\n                        });\n                        break;\n                    case \"delete\":\n                        this.$Modal.confirm({\n                            title: '确认框',\n                            content: '<p>是否删除任务</p>',\n                            onOk: () => {\n                                this.$axios.post(\"/delete\", {'jobList': this.$refs.selection.getSelection()}).then(() => {\n                                    this.refresh()\n                                    this.$Message.info('删除任务成功');\n                                });\n                            }\n                        });\n                        break;\n                }\n            },\n            refresh() {\n                this.$axios.get(\"/jobs?group=\" + this.group).then((res) => {\n                    this.data = res.data.data\n                });\n            },\n            loadGroups() {\n                this.$axios.get(\"/group\").then((res) => {\n                    if (res.data.success) {\n                        this.groups = res.data.data;\n                    } else {\n                        this.$Message.warn(\"查询组失败\")\n                    }\n                })\n            },\n            changeGroup() {\n                this.$axios.get(\"/jobs?group=\" + this.group).then((res) => {\n                    this.data = res.data.data\n                });\n            },\n            show(job) {\n                this.$router.push(\"/taskView?job=\"+job)\n            }\n        },\n        created() {\n            this.$axios.get(\"/jobs\").then((res) => {\n                this.data = res.data.data\n            });\n            this.loadGroups()\n        }\n    }\n</script>\n\n<style scoped>\n    .line {\n        height: 1px;\n        background-color: #ccc;\n    }\n</style>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Task.vue?vue&type=script&lang=text%2Fecmascript-6&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Task.vue?vue&type=script&lang=text%2Fecmascript-6&\"","import { render, staticRenderFns } from \"./Task.vue?vue&type=template&id=297bb912&scoped=true&\"\nimport script from \"./Task.vue?vue&type=script&lang=text%2Fecmascript-6&\"\nexport * from \"./Task.vue?vue&type=script&lang=text%2Fecmascript-6&\"\nimport style0 from \"./Task.vue?vue&type=style&index=0&id=297bb912&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"297bb912\",\n  null\n  \n)\n\ncomponent.options.__file = \"Task.vue\"\nexport default component.exports","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/lib/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Task.vue?vue&type=style&index=0&id=297bb912&scoped=true&lang=css&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/lib/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Task.vue?vue&type=style&index=0&id=297bb912&scoped=true&lang=css&\""],"sourceRoot":""}